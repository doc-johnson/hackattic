import requests
from subprocess import run, PIPE, Popen
import os
import base64
import psycopg2
from json import dumps

token = os.getenv("token")
db_user = os.getenv("db_user")
db_password = os.getenv("db_password")
db_command = os.getenv("take_alive")

request = requests.get(f"https://hackattic.com/challenges/backup_restore/problem?access_token={token}").json()
dump = request["dump"]
binDump = base64.b64decode(dump)
with open('db.dump', 'wb') as fp:
	fp.write(binDump)

run(['createdb', 'testdb'])
gunzip = Popen(['gunzip', '-c', 'db.dump'], stdout=PIPE)
run(['psql', 'testdb'], stdin=gunzip.stdout)
try:
	connect_str = f"dbname='testdb' user={db_user} host='localhost' password={db_password}"
	conn = psycopg2.connect(connect_str)
	cursor = conn.cursor()
	cursor.execute(f"{db_command}")
	ssn = cursor.fetchall()
	ssnList = []
	for num in ssn:
		ssnList.append(*num)
	conn.commit()
	conn.close()
	data = dumps({'alive_ssns': ssnList})
	post_request = requests.post(f"https://hackattic.com/challenges/backup_restore/solve?access_token={token}", data = data)
	print(post_request.text)
except Exception as e:
	print(e)
finally:
	#Remove tempdb at the end of program
	run(['dropdb', 'testdb'])

# Commands to convert b64dump to psql:
# -----------------------------------
# createdb testdb
# gunzip -c db.dump | psql testdb
